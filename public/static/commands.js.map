{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://excel-custom-functions/./src/commands/commands.ts","webpack://excel-custom-functions/webpack/startup"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event\n */\nfunction action(event: Office.AddinCommands.Event) {\n  const message: Office.NotificationMessageDetails = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message.\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete.\n  event.completed();\n}\n\n// Register the function with Office.\nOffice.actions.associate(\"action\", action);\n\nasync function getData(event: Office.AddinCommands.Event) {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      const range = sheet.getRange(\"A1:I1\");\n      range.load(\"values\");\n      await context.sync();\n\n      const datasets = [];\n      for (let i = 0; i < range.values[0].length; i++) {\n        if (range.values[0][i] !== \"\") {\n          datasets.push(range.values[0][i]);\n        }\n      }\n\n      console.log(\"1\");\n      console.log(datasets);\n      console.log(datasets[0]);\n      const dataset = datasets[0];\n\n      let url = \"https://api.correlatefinance.com/raw-dataset\";\n      console.log(url);\n      function processMessage(arg) {\n        console.log(\"Message from the dialog: \" + arg.message);\n        if (arg.message !== \"\" && arg.message !== \"Invalid Credentials\") {\n          window.localStorage.setItem(\"token\", arg.message);\n        }\n        dialog.close();\n      }\n\n      if (window.localStorage.getItem(\"token\") === null) {\n        Office.context.ui.displayDialogAsync(\n          \"https://app.correlatefinance.com/static/popup.html\",\n          { height: 25, width: 35 },\n          function (result) {\n            dialog = result.value;\n            dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);\n          }\n        );\n      }\n      console.log(\"fetching\");\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"text/html\",\n          Authorization: `Token ${window.localStorage.getItem(\"token\")}`,\n        },\n        body: dataset,\n      })\n        .then(function (response) {\n          console.log(\"fetched\");\n          return response.json();\n        })\n        .then(function (json) {\n          console.log(json);\n          const dataset = JSON.parse(json.dataset);\n          console.log(\"dataset\");\n          console.log(dataset);\n\n          const dataObjValues = dataset.map((item: any) => {\n            const objValues = Object.values(item);\n            return objValues;\n          }) as (string | number)[][];\n          const dataObjKeys = Object.keys(dataset?.[0]);\n          const source = json.source;\n          const description = json.description;\n          const dataToWrite = [\n            [\"Source\", source],\n            description === \"\" || description === null ? [\"\", \"\"] : [\"Description\", description],\n            [\"\", \"\"],\n            [\"\", \"\"],\n            [\"\", \"\"],\n            dataObjKeys,\n            ...dataObjValues,\n          ];\n\n          const context = new Excel.RequestContext();\n          const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n\n          let rangeAddress = `A3:B${2 + dataToWrite.length}`;\n          console.log(rangeAddress);\n          let range = currentWorksheet.getRange(rangeAddress);\n\n          // Write the 2D array data to the range\n          console.log(dataObjValues);\n          range.values = dataToWrite;\n\n          return context.sync();\n        })\n        .catch((error) => {\n          console.log(\"error\");\n          return error.message;\n        });\n    });\n  } catch (error) {\n    const errorUrl = `https:/app.correlatefinance.com/error.html?error=${error.message}`;\n\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    Office.context.ui.displayDialogAsync(errorUrl, { height: 25, width: 35 }, function (result) {\n      dialog = result.value;\n      dialog.messageChild(JSON.stringify({ name: error.message }));\n    });\n  }\n\n  event.completed();\n}\nOffice.actions.associate(\"getData\", getData);\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[29695]();\n"],"names":["Office","onReady","actions","associate","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed","Excel","run","__awaiter","_this","processMessage","arg","console","log","window","localStorage","setItem","dialog","close","sheet","workbook","worksheets","getActiveWorksheet","range","getRange","load","sync","_a","sent","datasets","i","values","length","push","dataset","url","getItem","ui","displayDialogAsync","height","width","result","value","addEventHandler","EventType","DialogMessageReceived","fetch","method","headers","Authorization","concat","body","then","response","json","JSON","parse","dataObjValues","map","Object","dataObjKeys","keys","source","description","dataToWrite","__spreadArray","RequestContext","currentWorksheet","rangeAddress","catch","error","errorUrl","error_1","messageChild","stringify","name","__webpack_modules__"],"sourceRoot":""}